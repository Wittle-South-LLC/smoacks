# pylint: disable-msg=C0321,R0912
"""Module to handle /{{ name }}s API endpoint """
from flask import current_app, g
from flask_jwt_extended import jwt_required
from util.api_util import new_dm_object, existing_dm_object, persist_dm_object, \
                          delete_dm_object, post_response, handle_search, api_error
from dm.{{ name }} import {{ name }}

{% if smoacks_api_security -%}@jwt_required{%- endif %}
def post(body):
    """Method to handle POST verb for /{{name}}s endpoint"""
    obj = new_dm_object({{ name }}, body)
    persist_dm_object(obj, g.db_session)
    return post_response(obj, {{ id_strings }})

{% if hasSearch %}{% if smoacks_api_security -%}@jwt_required{%- endif %}
def search(search_text):
    """Method to handle GET verb with no URL parameters"""
    return handle_search({{ name }}, {{ name }}.{{ search_field }}, g.db_session, search_text)

{% endif -%}
{% if smoacks_api_security -%}@jwt_required{%- endif %}
def delete({{ idList }}):
    """Method to handle DELETE verb for /{{ name }}/{{ name_id }} endpoint"""
    obj = existing_dm_object({{ name }}, g.db_session, {{ primary_keys }}, {{ id_list }})
    if not obj:
        return 'NOT_FOUND', 404
    delete_dm_object(obj, g.db_session)
    return '{{ name }} deleted', 204

{% if smoacks_api_security -%}@jwt_required{%- endif %}
def put({{ idList }}, body):
    """Method to handle PUT verb for /{{ name }}/{{ name_id }} endpoint"""
    obj = existing_dm_object({{ name }}, g.db_session, {{ primary_keys }}, {{ id_list }})
    if not obj:
        return 'NOT_FOUND', 404
    obj.apply_update(body)
    persist_dm_object(obj, g.db_session)
    return '{{ name }} updated', 200

{% if smoacks_api_security -%}@jwt_required{%- endif %}
def get({{ idList }}):
    """Method to handle GET verb for /{{ name }}/{{ name_id }} endpoint"""
    obj = existing_dm_object({{ name }}, g.db_session, {{ primary_keys }}, {{ id_list }})
    if not obj:
        return 'NOT_FOUND', 404
    return obj.dump(True), 200
