"""{{ mixedName }}.py - Module containing the {{ mixedName }} class"""
import uuid
import datetime
from sqlalchemy import Boolean, Column, Float, ForeignKey, Integer, JSON, String, text
from sqlalchemy.dialects.mysql import BINARY, DATETIME
{% if relationships|length > 0 %}from sqlalchemy.orm import relationship{% endif %}

from .base import Base

class {{ genprefix}}{{ mixedName }}(Base):
    """Data model object representing a {{ mixedName }}"""
    __tablename__ = '{{ mixedName }}'
    __uuid_list__ = {{ uuid_set }}
    __wo_fields__ = {{ wo_fields_set }}
    __primary_key__ = '{{ name_id }}'
    {% for dmField in dmFields %}{{ dmField }}
    {% endfor %}
    {% for rel in relationships %}{{ rel.name }} = relationship('{{ rel.table }}', back_populates='{{ rel.field }}'{% if rel.cascade %}, cascade='{{ rel.cascade }}'{% endif %})
    {% endfor %}
{% if idCount == 1 %}
    def __init__(self, **kwargs):
        """Initializes the ID for newly constructed objects"""
        super({{ genprefix}}{{ mixedName }}, self).__init__(**kwargs)
        self.{{ name_id }} = uuid.uuid4().bytes
{% endif %}
